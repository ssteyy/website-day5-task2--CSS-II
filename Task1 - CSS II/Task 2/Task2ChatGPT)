### What is CSS Compilation?

CSS compilation is the process of transforming code written in a CSS preprocessor (like Sass or LESS) into standard CSS that can be interpreted by web browsers. This transformation allows developers to leverage the advanced features offered by preprocessors while ultimately delivering traditional CSS files for browser compatibility.

### How CSS Compilation Works with Preprocessors

CSS preprocessors extend the capabilities of CSS by providing features such as variables, nesting, mixins, and functions. However, browsers do not understand these extended syntaxes. Therefore, compilation is necessary to convert this preprocessed code into regular CSS.

### Steps Involved in Compiling Sass to CSS

1. **Write Sass Code:** Developers write their styles using Sass syntax, which may include variables, nesting, and mixins.
  
2. **Run the Compiler:** A Sass compiler (such as Dart Sass or Node Sass) processes the Sass files. This can be done via command line, build tools like Gulp or Webpack, or integrated development environments (IDEs) that support Sass.

3. **Transformation:** During compilation, the Sass compiler interprets the advanced syntax and transforms it into standard CSS.

4. **Output CSS File:** The compiler generates a CSS file that can be linked to HTML documents. This file contains only the standard CSS rules without any of the preprocessor features.

### Example of Compiling Sass to CSS

**Original Sass Code:**
```scss
// styles.scss
$primary-color: #3498db;

body {
  font-family: Arial, sans-serif;
  color: $primary-color;

  h1 {
    font-size: 2em;
    color: darken($primary-color, 10%);
  }

  p {
    margin: 20px 0;
  }
}
```

**Compiled CSS Output:**
```css
/* styles.css */
body {
  font-family: Arial, sans-serif;
  color: #3498db; /* Value of $primary-color */
}

body h1 {
  font-size: 2em;
  color: #2980b9; /* Darkened version of $primary-color */
}

body p {
  margin: 20px 0;
}
```

### Summary

CSS compilation is an essential step in using CSS preprocessors like Sass or LESS, allowing developers to write more complex and organized styles while ensuring compatibility with web browsers. By following the steps outlined, developers can efficiently convert their preprocessed styles into standard CSS, streamlining the web development process.