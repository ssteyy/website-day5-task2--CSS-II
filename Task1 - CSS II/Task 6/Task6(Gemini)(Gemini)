## Components in CSS: Building Blocks for Reusability

**Components** in CSS are reusable blocks of code that can be applied to multiple elements on a web page. They help to organize code, promote consistency, and improve maintainability. By creating components, you can avoid duplicating code and make it easier to update styles across your entire website.

### Creating a Card Component with Sass

```scss
// Card component
.card {
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 20px;
  background-color: white;

  &__image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 5px;
  }

  &__title {
    font-size: 18px;
    margin-bottom: 10px;
  }

  &__description {
    font-size: 14px;
    color: #666;
  }

  &__button {
    display: block;
    margin-top: 10px;
    padding: 10px 20px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }
}
```

### Compiled CSS

```css
.card {
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 20px;
  background-color: white;
}

.card__image {
  width: 100%;
  height: 200px;
  object-fit: cover;
  border-radius: 5px;
}

.card__title {
  font-size: 18px;
  margin-bottom: 10px;
}

.card__description {
  font-size: 14px;
  color: #666;
}

.card__button {
  display: block;
  margin-top: 10px;
  padding: 10px 20px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}
```

### Structuring Components in a Sass Project

1. **Create a `components` folder:** This folder will contain all your component Sass files.
2. **Create individual component files:** Each component should have its own Sass file (e.g., `card.scss`).
3. **Use nested selectors:** Nest selectors within the main component class to define styles for specific elements within the component.
4. **Import components into your main stylesheet:** Import the component files into your main Sass file to make them available throughout your project.

**Example:**

```scss
// main.scss
@import 'components/card';

// Usage
.my-card {
  @extend .card;
  // Add additional styles if needed
}
```

By following these guidelines, you can effectively create and use components in your Sass projects, improving code organization, reusability, and maintainability.
